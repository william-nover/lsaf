<?php if ( ! defined('BASEPATH')) exit('No direct script access allowed');class Catalogue extends CI_Controller {	public $arrMenu = array();	public $data;	public $privilege = array();//	public $section = 8; //get module group id from database//	public $module_id = 15; //get module id from database	public $alias_category = "Catalogue";		public function __construct()	{		parent::__construct();               if (!$_SESSION) {                        session_start();                    }		if(empty($_SESSION['admin_data'])){			session_destroy();			redirect(BASE_URL_BACKEND."/signin");			exit();		}				$this->load->model(array('backend/Model_menu_frontend','backend/Model_catalogue','backend/Model_alias','backend/Model_logcms'));		$this->load->helper(array('funcglobal','menu','accessprivilege','alias'));		                $module_name=  $this->uri->segment(2);                $getmodule = $this->Model_catalogue->getModule($module_name);                foreach ($getmodule as $gm) {                 $this->module_id = $gm->module_id;                  $this->section = $gm->module_group_id;                $_SESSION['module_id']=$this->module_id;                }		//get menu from helper menu		$this->arrMenu = menu();		$this->data = array();                $this->data['ListMenu'] = $this->arrMenu;                $this->data['CountMenu'] = count($this->arrMenu);		$this->data['controller'] = $module_name;                $this->data['MenuCatalogue'] = $this->Model_menu_frontend->getMenuContent($_SESSION['module_id']);               		//check privilege module		$this->privilege = accessprivilegeuserlevel($_SESSION['admin_data']['user_level_id'], $_SESSION['module_id']);		$this->breadcrump = breadCrump($_SESSION['module_id']);	}		public function index()	{		$this->view();	}		function view(){		$admin_data = $_SESSION['admin_data'];		$this->data['admin_data'] = $admin_data;		$this->data['section'] = $this->section; 		$this->data['modul_id'] = $_SESSION['module_id'];		$this->data['breadcrump'] = $this->breadcrump;				$searchkey = "";		$searchby = "";		$where = "";		$orderBy = "";		$perpage = "";						$orderBy = "ORDER BY a.catalogue_order ASC";				$cond 			= $where." ".$orderBy;		$ListCatalogue = $this->Model_catalogue->getListCatalogue($cond);				$this->data["ListCatalogue"] = $ListCatalogue;				//extract privilege		$this->data["list"] = $this->privilege[0];		$this->data["view"] = $this->privilege[1];		$this->data["add"] = $this->privilege[2];		$this->data["edit"] = $this->privilege[3];		$this->data["publish"] = $this->privilege[4];		$this->data["approve"] = $this->privilege[5];		$this->data["delete"] = $this->privilege[6];		$this->data["order"] = $this->privilege[7];				if($this->data["list"] == 0){			echo "<script>alert('Can\'t Access Module');window.location.href='".BASE_URL_BACKEND."/home';</script>";			die;		}												$this->load->view('backend/header',$this->data);		$this->load->view('backend/catalogue/list');	}		 function add(){		//extract privilege		$this->data["add"] = $this->privilege[2];				if($this->data["add"] == 0){			echo "<script>alert('Can\'t Access Module');window.location.href='".BASE_URL_BACKEND."/home';</script>";			die;		}				$admin_data = $_SESSION['admin_data'];		$this->data['admin_data'] = $admin_data;		$this->data['section'] = $this->section; 		$this->data['modul_id'] = $this->module_id;		$this->data['breadcrump'] = $this->breadcrump;				$this->load->view('backend/header',$this->data);		$this->load->view('backend/catalogue/add',$this->data);	}		public function doAdd(){		//extract privilege		$this->data["add"] = $this->privilege[2];				if($this->data["add"] == 0){			echo "<script>alert('Can\'t Access Module');window.location.href='".BASE_URL_BACKEND."/home';</script>";			die;		}				$tb = $_POST['tbSave'];		if (!$tb) {			redirect(BASE_URL_BACKEND.'/'.$this->data['controller']);			exit();		}				$admin_data = $_SESSION['admin_data'];		$this->data['admin_data'] = $admin_data;		$this->data['section'] = $this->section; 		$this->data['modul_id'] = $this->module_id;		$this->data['breadcrump'] = $this->breadcrump;		             		$catalogue_title = $this->security->xss_clean(secure_input($_POST['cataloguetitle']));                $catalogue_type = $this->security->xss_clean(secure_input($_POST['catalogue_type']));		$catalogue_fileurl = $this->security->xss_clean(secure_input($_POST['cataloguefileurl']));		// Validasi data		if ($catalogue_title=="") {			$pesan[] = 'Catalogue Title is empty';		} 		  				if (! count($pesan)==0 ) {			foreach ($pesan as $indeks=>$pesan_tampil) {				$this->data['error'] = $pesan_tampil;								$this->data['catalogue_title']=$catalogue_title;				$this->data['catalogue_type']=$catalogue_type;                                $this->data['cataloguefileurl']=$catalogue_fileurl;									$this->load->view('backend/header',$this->data);				$this->load->view('backend/catalogue/add',$this->data);			}		} else {			$cekCatalogue = $this->Model_catalogue->checkCatalogue($catalogue_title);			$countCatalogue = count($cekCatalogue);						if ($countCatalogue > 0 ) {				$this->data['error']='Catalogue Title '.$catalogue_title.' already exist';								$this->data['catalogue_title']=$catalogue_title;				$this->data['catalogue_type']=$catalogue_type;                                $this->data['$cataloguefileurl']=$catalogue_fileurl;								$this->load->view('backend/header',$this->data);				$this->load->view('backend/catalogue/add',$this->data);			} else {				$catalogue_fileurl = str_replace(BASE_URL,"",$catalogue_fileurl);								$catalogue_id = $this->Model_catalogue->insertCatalogue($catalogue_title,$catalogue_fileurl,$catalogue_type);										                                $log_module = "Add ".$this->module;                                $log_value = $catalogue_id." | ".$catalogue_title." | ".$catalogue_fileurl;                                $insertlog = $this->Model_logcms->insertLogCMS($log_module,$log_value);					                                redirect(BASE_URL_BACKEND.'/'.$this->data['controller']);                                                        }			}		}		function active($id){		if (empty($id)) {			redirect(BASE_URL_BACKEND.'/'.$this->data['controller']);			exit();		}				//extract privilege		$this->data["approve"] = $this->privilege[5];				if($this->data["approve"] == 0){			echo "<script>alert('Can\'t Access Module');window.location.href='".BASE_URL_BACKEND."/home';</script>";			die;		}				$rsCatalogue = $this->Model_catalogue->getCatalogue($id); 		$title = $rsCatalogue[0]['catalogue_title'];		$active_status = abs($rsCatalogue[0]['catalogue_active_status']-1);				$active = $this->Model_catalogue->activeCatalogue($id);						if($active_status == 1){			$log_module = "Active ".$this->module;		} else {			$log_module = "Inactive ".$this->module;		}		$log_value = $id." | ".$title." | ".$active_status;		$insertlog = $this->Model_logcms->insertLogCMS($log_module,$log_value);              		redirect(BASE_URL_BACKEND.'/'.$this->data['controller']);			}		function delete($id){		if (empty($id)) {			redirect(BASE_URL_BACKEND.'/'.$this->data['controller']);			exit();		}				//extract privilege		$this->data["delete"] = $this->privilege[6];				if($this->data["delete"] == 0){			echo "<script>alert('Can\'t Access Module');window.location.href='".BASE_URL_BACKEND."/home';</script>";			die;		}				$rsCatalogue = $this->Model_catalogue->getCatalogue($id); 		$title = $rsCatalogue[0]['catalogue_title'];		$delete = $this->Model_catalogue->deleteCatalogue($id);				$log_module = "Delete ".$this->module;		$log_value = $id." | ".$title;		$insertlog = $this->Model_logcms->insertLogCMS($log_module,$log_value);                                $this->generateCatalogue();		                redirect(BASE_URL_BACKEND.'/'.$this->data['controller']);	}        	public function edit($id){		if (empty($id)) {			redirect(BASE_URL_BACKEND.'/'.$this->data['controller']);			exit();		}		//extract privilege		$this->data["edit"] = $this->privilege[3];				if($this->data["edit"] == 0){			echo "<script>alert('Can\'t Access Module');window.location.href='".BASE_URL_BACKEND."/home';</script>";			die;		}				$admin_data = $_SESSION['admin_data'];		$this->data['admin_data'] = $admin_data;		$this->data['section'] = $this->section; 		$this->data['modul_id'] = $this->module_id;		$this->data['breadcrump'] = $this->breadcrump;				$rsCatalogue = $this->Model_catalogue->getCatalogue($id);  // mengambil database dari model untuk dikirim ke view		                $countCatalogue = count($rsCatalogue);		$this->data['rsCatalogue'] = $rsCatalogue;		$this->data['countCatalogue'] = $countCatalogue;				$this->load->view('backend/header',$this->data);		$this->load->view('backend/catalogue/edit',$this->data);	}		public function doEdit($id){		$tb = $_POST['tbEdit'];		if (!$tb OR $id == '') {			redirect(BASE_URL_BACKEND.'/'.$this->data['controller']);			exit();		}				//extract privilege		$this->data["edit"] = $this->privilege[3];				if($this->data["edit"] == 0){			echo "<script>alert('Can\'t Access Module');window.location.href='".BASE_URL_BACKEND."/home';</script>";			die;		}				$admin_data = $_SESSION['admin_data'];		$this->data['admin_data'] = $admin_data;		$this->data['section'] = $this->section; 		$this->data['modul_id'] = $this->module_id;		$this->data['breadcrump'] = $this->breadcrump;				$rsCatalogue = $this->Model_catalogue->getCatalogue($id);  // mengambil database dari model untuk dikirim ke view		$countCatalogue = count($rsCatalogue);				$this->data['rsCatalogue'] = $rsCatalogue;		$this->data['countCatalogue'] = $countCatalogue;                				$catalogue_title = $this->security->xss_clean(secure_input($_POST['cataloguetitle']));                $catalogue_type = $this->security->xss_clean(secure_input($_POST['catalogue_type']));		$catalogue_fileurl = $this->security->xss_clean(secure_input($_POST['cataloguefileurl']));				$pesan = array();		// Validasi data		if ($catalogue_title=="") {			$pesan[] = 'Catalogue Title is empty';		}						if (! count($pesan)==0 ) {			foreach ($pesan as $indeks=>$pesan_tampil) {				$this->data['error'] = $pesan_tampil;								$this->load->view('backend/header',$this->data);				$this->load->view('backend/catalogue/edit',$this->data);			}		} else {			$catalogue_fileurl = str_replace(BASE_URL,"",$catalogue_fileurl);				                                				$update = $this->Model_catalogue->updateCatalogue($id,$catalogue_title,$catalogue_fileurl,$catalogue_type);							$log_module = "Edit ".$this->module;					$log_value = $id." | ".$catalogue_title." | ".$catalogue_fileurl;					$insertlog = $this->Model_logcms->insertLogCMS($log_module,$log_value);					 $this->generateCatalogue();					redirect(BASE_URL_BACKEND.'/'.$this->data['controller']);			}			}	public function doOrder(){				$order = $this->security->xss_clean($_POST['order']);				if($order == ""){			redirect(BASE_URL_BACKEND.'/'.$this->data['controller']);			exit();		} 				foreach($order as $id => $ordervalue){			$this->Model_catalogue->updateOrderCatalogue($id,$ordervalue);                        echo $ordervalue;		}		 $this->generateCatalogue();		redirect(BASE_URL_BACKEND.'/'.$this->data['controller']);	}        function generateCatalogue(){                $ListCatalogue			= $this->Model_catalogue->GenerateCatalogue(" WHERE catalogue_active_status = 1 and catalogue_file != '' ORDER BY catalogue_order ASC");		$countCatalogue		= count($ListCatalogue);               createCache($ListCatalogue,"catalogue");                              $count			= $this->Model_catalogue->CountCatalogue();               createCache($count,"countcatalogue");        }}