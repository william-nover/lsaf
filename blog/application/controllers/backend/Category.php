<?php if (!defined('BASEPATH')) exit('No direct script access allowed');class Category  extends CI_Controller{    public $arrCategory = array();    public $data;    public $privilege = array();    public $section = 7;    public $module_id = 109;    public $module = "Category";    public function __construct()    {        parent::__construct();        if (!$_SESSION) {            session_start();        }        if (empty($_SESSION['admin_data'])) {            session_destroy();            redirect(BASE_URL_BACKEND . "/signin");            exit();        }        $this->load->model(array(            'backend/Model_category_frontend',            'backend/Model_module',            'backend/Model_language',            'backend/Model_logcms'        ));        $this->load->helper(array(            'funcglobal',            'menu',            'category',            'accessprivilege',            'alias'        ));    $this->arrMenu           = menu();    $this->data              = array();    $this->data['ListMenu']  = $this->arrMenu;    $this->data['CountMenu'] = count($this->arrMenu);    $this->privilege         = accessprivilegeuserlevel($_SESSION['admin_data']['user_level_id'], $this->module_id);    $this->breadcrump        = breadCrump($this->module_id);        $module_group_id          = 7;      $cond                     = " ";    $Cate_type               = $this->Model_category_frontend->getListCategoryType();    $this->data['Cate_type'] = $Cate_type;            }    public function index()    {        $this->view();    }    private function categoryrekursif($start, $per_page, $where, $orderBy)    {        $arrayCategory = array();        $cond      = $where . " AND category_parent = 0 " . $orderBy;        $cond .= " LIMIT " . $start . "," . $per_page;        $rsCategory = $this->Model_category_frontend->getListCategory($cond);        $index  = 0;        if (count($rsCategory) > 0) {            for ($i = 0; $i < count($rsCategory); $i++) {                $arrayCategory[$index]['category_id']            = $rsCategory[$i]['category_id'];                $arrayCategory[$index]['category_title']         = $rsCategory[$i]['category_title'];                $arrayCategory[$index]['module_name']         = $rsCategory[$i]['module_name'];                $arrayCategory[$index]['category_image']         = $rsCategory[$i]['category_image'];                $arrayCategory[$index]['category_url']           = $rsCategory[$i]['category_url'];                $arrayCategory[$index]['category_active_status'] = $rsCategory[$i]['category_active_status'];                $arrayCategory[$index]['category_parent']        = $rsCategory[$i]['category_parent'];                $arrayCategory[$index]['category_sub_parent']    = $rsCategory[$i]['category_sub_parent'];                $arrayCategory[$index]['category_order']         = $rsCategory[$i]['category_order'];                $arrayCategory[$index]['category_create_date']   = $rsCategory[$i]['category_create_date'];                $index++;                $cond      = $where . "  AND category_parent = " . $rsCategory[$i]['category_id'] . " AND category_sub_parent=0 " . $orderBy;                $rsSubCategory = $this->Model_category_frontend->getListCategory($cond);                if (count($rsSubCategory) > 0) {                    for ($j = 0; $j < count($rsSubCategory); $j++) {                        $arrayCategory[$index]['category_id']            = $rsSubCategory[$j]['category_id'];                        $arrayCategory[$index]['category_title']         = "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;" . $rsSubCategory[$j]['category_title'];                        $arrayCategory[$index]['module_name']         = $rsSubCategory[$j]['module_name'];                        $arrayCategory[$index]['category_image']         = $rsSubCategory[$j]['category_image'];                        $arrayCategory[$index]['category_url']           = $rsSubCategory[$j]['category_url'];                        $arrayCategory[$index]['category_alias']         = $rsSubCategory[$j]['category_alias'];                        $arrayCategory[$index]['category_active_status'] = $rsSubCategory[$j]['category_active_status'];                        $arrayCategory[$index]['category_parent']        = $rsSubCategory[$j]['category_parent'];                        $arrayCategory[$index]['category_sub_parent']    = $rsSubCategory[$j]['category_sub_parent'];                        $arrayCategory[$index]['category_order']         = $rsSubCategory[$j]['category_order'];                        $arrayCategory[$index]['category_create_date']   = $rsSubCategory[$j]['category_create_date'];                        $index++;                        $cond           = $where . " AND category_sub_parent = " . $rsSubCategory[$j]['category_id'] . " AND category_parent = " . $rsCategory[$i]['category_id'] . " " . $orderBy;                        $rsSubChildCategory = $this->Model_category_frontend->getListCategory($cond);                        if (count($rsSubChildCategory) > 0) {                            for ($k = 0; $k < count($rsSubChildCategory); $k++) {                                $arrayCategory[$index]['category_id']            = $rsSubChildCategory[$k]['category_id'];                                $arrayCategory[$index]['category_title']         = "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;" . $rsSubChildCategory[$k]['category_title'];                                $arrayCategory[$index]['module_name']           = $rsSubChildCategory[$k]['module_name'];                                $arrayCategory[$index]['category_image']           = $rsSubChildCategory[$k]['category_image'];                                $arrayCategory[$index]['category_url']           = $rsSubChildCategory[$k]['category_url'];                                $arrayCategory[$index]['category_alias']         = $rsSubChildCategory[$k]['category_alias'];                                $arrayCategory[$index]['category_active_status'] = $rsSubChildCategory[$k]['category_active_status'];                                $arrayCategory[$index]['category_parent']        = $rsSubChildCategory[$k]['category_parent'];                                $arrayCategory[$index]['category_sub_parent']    = $rsSubChildCategory[$k]['category_sub_parent'];                                $arrayCategory[$index]['category_order']         = $rsSubChildCategory[$k]['category_order'];                                $arrayCategory[$index]['category_create_date']   = $rsSubChildCategory[$k]['category_create_date'];                                $index++;                            }                        }                    }                }            }        } else {            if ($where != "WHERE 1=1 ") {                $index     = 0;                $cond      = $where . " " . $orderBy;                $rsSubCategory = $this->Model_category_frontend->getListCategory($cond);                if (count($rsSubCategory) > 0) {                    for ($j = 0; $j < count($rsSubCategory); $j++) {                        $arrayCategory[$index]['category_id']            = $rsSubCategory[$j]['category_id'];                        $arrayCategory[$index]['category_title']         = "&nbsp;&nbsp;&nbsp;&nbsp;" . $rsSubCategory[$j]['category_title'];                        $arrayCategory[$index]['category_url']           = $rsSubCategory[$j]['category_url'];                        $arrayCategory[$index]['category_alias']         = $rsSubCategory[$j]['category_alias'];                        $arrayCategory[$index]['category_active_status'] = $rsSubCategory[$j]['category_active_status'];                        $arrayCategory[$index]['category_parent']        = $rsSubCategory[$j]['category_parent'];                        $arrayCategory[$index]['category_order']         = $rsSubCategory[$j]['category_order'];                        $arrayCategory[$index]['category_create_date']   = $rsSubCategory[$j]['category_create_date'];                        $index++;                    }                }            }        }        return $arrayCategory;    }        function view()    {        $admin_data               = $_SESSION['admin_data'];        $this->data['admin_data'] = $admin_data;        $this->data['section']    = $this->section;        $this->data['modul_id']   = $this->module_id;        $this->data['breadcrump'] = $this->breadcrump;        $searchkey                = "";        $searchby                 = "";        $where                    = "";        $orderBy                  = "";        $perpage                  = "";        $where .= "WHERE 1=1 ";        if (isset($_POST["tbSearch"])) {            $_SESSION["searchkey" . $this->module_id] = '';            $_SESSION["searchby" . $this->module_id]  = '';            $_SESSION["perpage" . $this->module_id]   = '';            $searchkey                                = $this->security->xss_clean(secure_input($_POST['searchkey']));            $searchby                                 = $this->security->xss_clean(secure_input($_POST['searchby']));            $perpage                                  = $this->security->xss_clean(secure_input($_POST['perpage']));            $pesan                                    = array();            if ($searchkey == "") {                $pesan[] = 'Keyword search is empty';            } else if ($searchby == "") {                $pesan[] = 'Search by has not been choose';            }            if (!count($pesan) == 0) {                foreach ($pesan as $indeks => $pesan_tampil) {                    $_SESSION["searchkey" . $this->module_id] = '';                    $_SESSION["searchby" . $this->module_id]  = '';                    $_SESSION["perpage" . $this->module_id]   = '';                }            } else {                $_SESSION["searchkey" . $this->module_id] = $searchkey;                $_SESSION["searchby" . $this->module_id]  = $searchby;                $_SESSION["perpage" . $this->module_id]   = $perpage;                if (isset($_POST['searchkey'])) {                    $searchkey = $_SESSION["searchkey" . $this->module_id];                }                if (isset($_POST['searchby'])) {                    $searchby = $_SESSION["searchby" . $this->module_id];                }                if ($searchkey != "" && $searchby != "") {                    $where .= " AND " . $searchby . " LIKE '%" . $searchkey . "%' ";                }            }        } else {            $searchkey = @$_SESSION["searchkey" . $this->module_id];            $searchby  = @$_SESSION["searchby" . $this->module_id];            if ($searchkey != "" && $searchby != "") {                $where .= " AND " . $searchby . " LIKE '%" . $searchkey . "%' ";            }            if (isset($_POST['perpage'])) {                $perpage                                = $this->security->xss_clean(secure_input($_POST['perpage']));                $_SESSION["perpage" . $this->module_id] = $perpage;            } else {                $perpage = @$_SESSION["perpage" . $this->module_id];                if ($perpage == "") {                    $perpage = PER_PAGE;                }            }        }        $orderBy              = "ORDER BY module_id ASC, category_parent ASC, category_order ASC, category_id ASC";        $cond                 = $where . " " . $orderBy;        $rsCategory               = $this->Model_category_frontend->getListCategory($cond);        $base_url             = BASE_URL_BACKEND . "/category/view/";        $total_rows           = count($rsCategory);        $per_page             = PER_PAGE;        $this->data['paging'] = pagging($base_url, $total_rows, $per_page);        $page                 = ($this->uri->segment(4)) ? $this->uri->segment(4) : 1;        $start                = $per_page * $page - $per_page;        if ($start < 0)            $start = 0;        $cond .= " LIMIT " . $start . "," . $per_page;        $ListCategory               = $this->categoryrekursif($start, $per_page, $where, $orderBy);        $this->data["ListCategory"] = $ListCategory;        $this->data["list"]             = $this->privilege[0];        $this->data["view"]             = $this->privilege[1];        $this->data["add"]              = $this->privilege[2];        $this->data["edit"]             = $this->privilege[3];        $this->data["publish"]          = $this->privilege[4];        $this->data["approve"]          = $this->privilege[5];        $this->data["delete"]           = $this->privilege[6];        $this->data["order"]            = $this->privilege[7];              if ($this->data["list"] == 0) {            echo "<script>alert('Can\'t Access Module');window.location.href='" . BASE_URL_BACKEND . "/home';</script>";            die;        }        $this->data['searchkey'] = $searchkey;        $this->data['searchby']  = $searchby;        $this->data['perpage']   = $perpage;        $this->data['total']     = $total_rows;        $this->load->view('backend/header', $this->data);        $this->load->view('backend/category/list');    }    public function add()    {        $this->data["add"] = $this->privilege[2];        if ($this->data["add"] == 0) {            echo "<script>alert('Can\'t Access Module');window.location.href='" . BASE_URL_BACKEND . "/home';</script>";            die;        }               $admin_data               = $_SESSION['admin_data'];        $this->data['admin_data'] = $admin_data;        $this->data['section']    = $this->section;        $this->data['modul_id']   = $this->module_id;        $this->data['breadcrump'] = $this->breadcrump;                $this->load->view('backend/header', $this->data);        $this->load->view('backend/category/add', $this->data);    }    public function doAdd()    {        $this->data["add"] = $this->privilege[2];        if ($this->data["add"] == 0) {            echo "<script>alert('Can\'t Access Module');window.location.href='" . BASE_URL_BACKEND . "/home';</script>";            die;        }        $tb = $_POST['tbSave'];        if (!$tb) {            redirect(BASE_URL_BACKEND . "/category");            exit();        }        $admin_data               = $_SESSION['admin_data'];        $this->data['admin_data'] = $admin_data;        $this->data['section']    = $this->section;        $this->data['modul_id']   = $this->module_id;        $this->data['breadcrump'] = $this->breadcrump;        $asal   = array("\"","/", " ", "(", ")", "=","@", "%","^","*","`","+","#","$",";" ,":","{","}","[","]","|");        $ganti  = array("");        $categorytitle                = $this->security->xss_clean(secure_input($_POST['categorytitle']));        $categoryimageurl = $this->security->xss_clean(secure_input($_POST['categoryimageurl']));        $categorytitle_url            = (str_replace($asal, $ganti, $categorytitle));        $categoryurl                  = $this->security->xss_clean(secure_input($_POST['categoryurl']));        $category_type_id                = $this->security->xss_clean(secure_input($_POST['category_type_id']));        $module_id                = 115;        $categoryparent               = 0;        $categorysubparent            = 0;        $categoryalias                = generateAlias($categorytitle);        $pesan                    = array();        if ($categorytitle == "") {            $pesan[] = 'Category Title is empty';        }        if (!count($pesan) == 0) {            foreach ($pesan as $indeks => $pesan_tampil) {                $this->data['error']         = $pesan_tampil;                $this->data['categorytitle']     = $categorytitle;                $this->data['category_type_id']     = $category_type_id;                $this->data['categoryimageurl']       = $categoryimageurl;                $this->data['categoryurl']       = $categoryurl;                $this->data['categoryparent']    = $categoryparent;                $this->data['categorysubparent'] = $categorysubparent;                $this->load->view('backend/header', $this->data);                $this->load->view('backend/category/add', $this->data);            }        } else {            $cekCategory   = $this->Model_category_frontend->checkCategory($categorytitle);            $countCategory = count($cekCategory);            $countCategory = 0;            if ($countCategory > 0) {                $this->data['error']         = 'Category Title ' . $categorytitle . ' already exist';                $this->data['categorytitle']     = $categorytitle;                $this->data['category_type_id']     = $category_type_id;                $this->data['categoryimageurl']       = $categoryimageurl;                $this->data['categoryurl']       = $categoryurl;                $this->data['categoryparent']    = $categoryparent;                $this->data['categorysubparent'] = $categorysubparent;                $this->load->view('backend/header', $this->data);                $this->load->view('backend/category/add', $this->data);            } else {                $categoryimageurl = str_replace(BASE_URL,"",$categoryimageurl);                $categoryid = $this->Model_category_frontend->insertCategory($category_type_id, $module_id, $categorytitle,$categoryimageurl, $categoryurl, $categoryalias, $categoryparent, $categorysubparent);                if ($categoryurl == '') {                    if ($categoryparent == 0 && $categorysubparent == 0) {                        $category_url = '/' . $categorytitle_url;                        $url_category = (str_replace('www.', '', generateAlias($category_url)));                    } else if ($categoryparent != 0 && $categorysubparent == 0) {                        $parent   = $this->Model_category_frontend->getCategoryParent($categoryparent);                        $category_url = '/' . $parent . '/' . $categorytitle_url;                        $url_category = (str_replace('www.', '', generateAlias($category_url)));                    } else if ($categoryparent != 0 && $categorysubparent != 0) {                        $parent    = $this->Model_category_frontend->getCategoryParent($categoryparent);                        $subparent = $this->Model_category_frontend->getCategorysubParent($categoryparent, $categorysubparent);                        $category_url  = '/' . $parent . '/' . $subparent . '/' . $categorytitle_url;                        $url_category  = (str_replace('www.', '', generateAlias($category_url)));                    }                    $this->Model_category_frontend->updateUrlCategory($categoryid, $url_category);                }                $log_module = "Add " . $this->module;                $log_value  = $categoryid . " | " . $categorytitle . " | " . $categoryurl . " | " . $categoryparent . " | " . $categoryparent;                $insertlog  = $this->Model_logcms->insertLogCMS($log_module, $log_value);                redirect(BASE_URL_BACKEND . "/category/");            }        }    }    function active($id)    {        if (empty($id)) {            redirect(BASE_URL_BACKEND . "/category");            exit();        }        $this->data["approve"] = $this->privilege[5];        if ($this->data["approve"] == 0) {            echo "<script>alert('Can\'t Access Module');window.location.href='" . BASE_URL_BACKEND . "/home';</script>";            die;        }        $rsCategory        = $this->Model_category_frontend->getCategory($id);        $title         = $rsCategory[0]['category_title'];        $active_status = abs($rsCategory[0]['category_active_status'] - 1);        $active        = $this->Model_category_frontend->activeCategory($id);        if ($active_status == 1) {            $log_module = "Active " . $this->module;        } else {            $log_module = "Inactive " . $this->module;        }        $log_value = $id . " | " . $title . " | " . $active_status;        $insertlog = $this->Model_logcms->insertLogCMS($log_module, $log_value);        $ListCategory  = $this->generateCategory();        createCache($ListCategory, "category");        redirect(BASE_URL_BACKEND . "/category");    }    function delete($id)    {        if (empty($id)) {            redirect(BASE_URL_BACKEND . "/category");            exit();        }        $this->data["delete"] = $this->privilege[6];        if ($this->data["delete"] == 0) {            echo "<script>alert('Can\'t Access Module');window.location.href='" . BASE_URL_BACKEND . "/home';</script>";            die;        }        $rsCategory     = $this->Model_category_frontend->getCategory($id);        $title      = $rsCategory[0]['category_title'];        $delete     = $this->Model_category_frontend->deleteCategory($id);        $log_module = "Delete " . $this->module;        $log_value  = $id . " | " . $title;        $insertlog  = $this->Model_logcms->insertLogCMS($log_module, $log_value);        $this->generateCategoryContent();        $ListCategory = $this->generateCategory();        createCache($ListCategory, "category");        redirect(BASE_URL_BACKEND . "/category");    }    public function edit($id)    {        if (empty($id)) {            redirect(BASE_URL_BACKEND . "/category");            exit();        }        $this->data["edit"] = $this->privilege[3];        if ($this->data["edit"] == 0) {            echo "<script>alert('Can\'t Access Module');window.location.href='" . BASE_URL_BACKEND . "/home';</script>";            die;        }                   $admin_data               = $_SESSION['admin_data'];        $this->data['admin_data'] = $admin_data;        $this->data['section']    = $this->section;        $this->data['modul_id']   = $this->module_id;        $this->data['breadcrump'] = $this->breadcrump;                $rsCategory                   = $this->Model_category_frontend->getCategory($id);        $countCategory                = count($rsCategory);        $this->data['rsCategory']     = $rsCategory;        $this->data['countCategory']  = $countCategory;                                $cond                     = "WHERE a.module_id =".$rsCategory[0]['module_id']." and a. category_active_status = 1 AND a. category_parent = 0 ";        $CategoryParent               = $this->Model_category_frontend->getListCategory($cond);        $this->data['CategoryParent'] = $CategoryParent;               $this->load->view('backend/header', $this->data);        $this->load->view('backend/category/edit', $this->data);    }    public function doEdit($id)    {        $tb = $_POST['tbEdit'];        if (!$tb OR $id == '') {            redirect(BASE_URL_BACKEND . "/category");            exit();        }        $this->data["edit"] = $this->privilege[3];        if ($this->data["edit"] == 0) {            echo "<script>alert('Can\'t Access Module');window.location.href='" . BASE_URL_BACKEND . "/home';</script>";            die;        }        $admin_data               = $_SESSION['admin_data'];        $this->data['admin_data'] = $admin_data;        $this->data['section']    = $this->section;        $this->data['modul_id']   = $this->module_id;        $this->data['breadcrump'] = $this->breadcrump;             $asal   = array("\"","/", " ", "(", ")", "=","@", "%","^","*","`","+","#","$",";" ,":","{","}","[","]","|");        $ganti  = array("");        $categorytitle                = $this->security->xss_clean(secure_input($_POST['categorytitle']));        $categoryimageurl = $this->security->xss_clean(secure_input($_POST['categoryimageurl']));        $categorytitle_url            = (str_replace($asal, $ganti, $categorytitle));        $categoryurl                  = $this->security->xss_clean(secure_input($_POST['categoryurl']));        $category_type_id                = $this->security->xss_clean(secure_input($_POST['category_type_id']));        $module_id                = 115;        $categoryparent               = 0;        $categorysubparent            = 0;        $categoryalias                = generateAlias($categorytitle);        $pesan                    = array();        if ($categorytitle == "") {            $pesan[] = 'Category Title is empty';        }        if (!count($pesan) == 0) {            foreach ($pesan as $indeks => $pesan_tampil) {                $this->data['error']         = $pesan_tampil;                $this->data['categorytitle']     = $categorytitle;                $this->data['category_type_id']    = $category_type_id;                $this->data['categoryimageurl']     = $categoryimageurl;                $this->data['categoryurl']       = $categoryurl;                $categoryparent               = 0;                $categorysubparent            = 0;                $this->load->view('backend/header', $this->data);                $this->load->view('backend/category/edit', $this->data);            }        } else {            $category_imageurl = str_replace(BASE_URL,"",$categoryimageurl);                             $update = $this->Model_category_frontend->updateCategory($id, $category_type_id, $module_id, $categorytitle,$category_imageurl, $categoryurl, $categoryalias, $categoryparent, $categorysubparent);                if ($categoryurl == '') {                    if ($categoryparent == 0 && $categorysubparent == 0) {                        $category_url = '/' . $categorytitle_url;                        $url_category = (str_replace('www.', '', generateAlias($category_url)));                    } else if ($categoryparent != 0 && $categorysubparent == 0) {                        $parent   = $this->Model_category_frontend->getCategoryParent($categoryparent);                        $category_url = '/' . $parent . '/' . $categorytitle_url;                        $url_category = (str_replace('www.', '', generateAlias($category_url)));                    } else if ($categoryparent != 0 && $categorysubparent != 0) {                        $parent    = $this->Model_category_frontend->getCategoryParent($categoryparent);                        $subparent = $this->Model_category_frontend->getCategorysubParent($categoryparent, $categorysubparent);                        $category_url  = '/' . $parent . '/' . $subparent . '/' . $categorytitle_url;                        $url_category  = (str_replace('www.', '', generateAlias($category_url)));                    }                    $this->Model_category_frontend->updateUrlCategory($id, $url_category);                }                $this->generateCategoryContent();                $log_module = "Edit " . $this->module;                $log_value  = $id . " | " . $categorytitle . " | " . $categoryurl . " | " . $categoryparent;                $insertlog  = $this->Model_logcms->insertLogCMS($log_module, $log_value);                $ListCategory   = $this->generateCategory();                createCache($ListCategory, "category");                redirect(BASE_URL_BACKEND . "/category/");                            }    }    public function doOrder()    {        $this->data["order"] = $this->privilege[7];        if ($this->data["order"] == 0) {            echo "<script>alert('Can\'t Access Module');window.location.href='" . BASE_URL_BACKEND . "/home';</script>";            die;        }        $categoryid = $_POST['categoryid'];        foreach ($categoryid as $id) {            $order       = $this->security->xss_clean(secure_input($_POST['order'][$id]));            $updateorder = $this->Model_category_frontend->updateOrderCategory($id, $order);            $rsCategory      = $this->Model_category_frontend->getCategory($id);            $title       = $rsCategory[0]['category_title'];            $parent      = $rsCategory[0]['category_parent'];            $log_module  = "Order " . $this->module;            $log_value   = $id . " | " . $title . " | " . $parent . " | " . $order;            $insertlog   = $this->Model_logcms->insertLogCMS($log_module, $log_value);        }//        $this->generateCategoryContent();//        $ListCategory = $this->generateCategory();//        createCache($ListCategory, "category");        redirect(BASE_URL_BACKEND . "/category/");    }    function generateCategory()    {        $row = $this->Model_category_frontend->GenerateCategory();        return $row;    }    function generateCategoryContent()    {        $ListCategoryContent = $this->Model_category_frontend->generateCategoryContent('where c.module_group_id = 8');        $countcategory       = count($ListCategoryContent);        createCache($ListCategoryContent, "categorycontent");    }}