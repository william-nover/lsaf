<?php if (!defined('BASEPATH')) exit('No direct script access allowed');class Module extends CI_Controller{    public $arrMenu = array();    public $data;    public $module = "Module";    public $section = 1;    public $module_id = 5;    public function __construct()    {        parent::__construct();        if (!$_SESSION) {            session_start();        }        if (empty($_SESSION['admin_data'])) {            session_destroy();            redirect(BASE_URL_BACKEND . "/signin");            exit();        }        if ($_SESSION['admin_data']['user_level_id'] != 1)            echo "<script>alert('Can\'t Access Module');window.location.href='" . BASE_URL_BACKEND . "/home';</script>";        $this->load->model(array(            'backend/Model_module',            'backend/Model_label',            'backend/Model_module_group',            'backend/Model_logcms'        ));        $this->load->helper(array(            'funcglobal',            'menu'        ));        //get menu from helper menu        $this->arrMenu           = menu();        $this->data              = array();        $this->data['ListMenu']  = $this->arrMenu;        $this->data['CountMenu'] = count($this->arrMenu);        $this->data['modul_id']  = 5;    }    public function index()    {        $this->view();    }    public function view()    {        $admin_data               = $_SESSION['admin_data'];        $this->data['admin_data'] = $admin_data;        $this->data['section']    = 'access';        $this->data['modul_id']   = 5;        $orderBy                  = "ORDER BY module_group_id ASC, module_order_value ASC, module_id DESC";        $cond                     = $orderBy;        $this->data["ListModule"] = $this->Model_module->getListModule($cond);        $this->load->view('backend/header', $this->data);        $this->load->view('backend/module/list', $this->data);    }    function active($id)    {        $id = $this->security->xss_clean(secure_input($id));        if ($id == '') {            redirect(BASE_URL_BACKEND . "/module");            exit();        }        $rsModule      = $this->Model_module->getModule($id);        $module_name   = $rsModule[0]['module_name'];        $active_status = abs($rsModule[0]['module_active_status'] - 1);        $active        = $this->Model_module->activeModule($id);        if ($active_status == 1) {            $log_module = "Active " . $this->module;        } else {            $log_module = "Inactive " . $this->module;        }        $log_value = $id . " | " . $module_name . " | " . $active_status;        $insertlog = $this->Model_logcms->insertLogCMS($log_module, $log_value);        redirect(BASE_URL_BACKEND . "/module");    }    function delete($id = '')    {        $id = $this->security->xss_clean(secure_input($id));        if (empty($id)) {            redirect(BASE_URL_BACKEND . "/module");            exit();        }        $rsModule    = $this->Model_module->getModule($id);        $module_name = $rsModule[0]['module_name'];        $delete      = $this->Model_module->deleteModule($id);        $log_module  = "Delete " . $this->module;        $log_value   = $id . " | " . $module_name;        $insertlog   = $this->Model_logcms->insertLogCMS($log_module, $log_value);        redirect(BASE_URL_BACKEND . "/module");    }    function deleteSelectedData($id = '')    {        $id = $this->security->xss_clean(secure_input($id));        if (empty($id)) {            redirect(BASE_URL_BACKEND . "/module");            exit();        }        $delete     = $this->Model_module->deleteSelectedModule($id);        $log_module = "Delete Selected " . $this->module;        $log_value  = $id;        $insertlog  = $this->Model_logcms->insertLogCMS($log_module, $log_value);        redirect(BASE_URL_BACKEND . "/module");    }    public function add()    {        $admin_data                   = $_SESSION['admin_data'];        $this->data['admin_data']     = $admin_data;        $this->data['section']        = 'access';        $this->data['modul_id']       = 5;        $rsListGroup                  = $this->Model_module_group->getListGroup(" WHERE module_group_active_status = 1 AND module_group_id <> 1");        $this->data["ListGroup"]      = $rsListGroup;        $this->data["CountListGroup"] = count($rsListGroup);        $modulegroupid                = "";        $this->data["modulegroupid"]  = $modulegroupid;        $this->load->view('backend/header', $this->data);        $this->load->view('backend/module/add', $this->data);    }    function doAdd()    {        $tb = $_POST['tbSave'];        if (!$tb) {            redirect(BASE_URL_BACKEND . "/module");            exit();        }        $admin_data                   = $_SESSION['admin_data'];        $this->data['admin_data']     = $admin_data;        $this->data['section']        = 'access';        $this->data['modul_id']       = 5;        $rsListGroup                  = $this->Model_module_group->getListGroup(" WHERE module_group_active_status = 1 AND module_group_id <> 1");        $this->data["ListGroup"]      = $rsListGroup;        $this->data["CountListGroup"] = count($rsListGroup);        $modulegroupid                = $_POST['module_group_id'];        $modulename                   = $this->security->xss_clean(secure_input($_POST['modulename']));        $modulepath                   = $this->security->xss_clean(secure_input($_POST['modulepath']));        $moduletype                   = $this->security->xss_clean(secure_input($_POST['moduletype']));        $pesan                        = array();        // Validasi data        if ($modulegroupid == "0") {            $pesan[] = 'Group Name has not been choose';        } else if ($modulename == "") {            $pesan[] = 'Module Name is empty';        } else if ($modulepath == "") {            $pesan[] = 'Module Controller is empty';        }        if (!count($pesan) == 0) {            foreach ($pesan as $indeks => $pesan_tampil) {                $this->data['error']         = $pesan_tampil;                $this->data['modulegroupid'] = $modulegroupid;                $this->data['modulename']    = $modulename;                $this->data['modulepath']    = $modulepath;                $this->load->view('backend/header', $this->data);                $this->load->view('backend/module/add', $this->data);            }        } else {            $cekModule   = $this->Model_module->checkModule($modulename, $modulegroupid);            $countModule = count($cekModule);            if ($countModule > 0) {                $this->data['error']         = 'Module Name ' . $modulename . ' already exist';                $this->data['modulegroupid'] = $modulegroupid;                $this->data['modulename']    = $modulename;                $this->data['modulepath']    = $modulepath;                $this->load->view('backend/header', $this->data);                $this->load->view('backend/module/add', $this->data);            } else {                $insert = $this->Model_module->insertModule($modulename, $modulepath, $modulegroupid, $moduletype);                redirect(BASE_URL_BACKEND . "/module/");            }        }    }    public function edit($id)    {        if (empty($id)) {            redirect(BASE_URL_BACKEND . "/module");            exit();        }        $admin_data                   = $_SESSION['admin_data'];        $this->data['admin_data']     = $admin_data;        $this->data['section']        = 'access';        $this->data['modul_id']       = 5;        $rsListGroup                  = $this->Model_module_group->getListGroup(" WHERE module_group_active_status = 1 AND module_group_id <> 1");        $this->data["ListGroup"]      = $rsListGroup;        $this->data["CountListGroup"] = count($rsListGroup);        $rsModule                     = $this->Model_module->getModule($id); // mengambil database dari model untuk dikirim ke view        $countModule                  = count($rsModule);        $this->data['rsModule']       = $rsModule;        $this->data['countModule']    = $countModule;        if ($countModule == 0) {            redirect(BASE_URL_BACKEND . "/module");            exit();        }        $this->load->view('backend/header', $this->data);        $this->load->view('backend/module/edit', $this->data);    }    public function doEdit($id)    {        $tb = $_POST['tbEdit'];        if (!$tb OR $id == '') {            redirect(BASE_URL_BACKEND . "/module");            exit();        }        $admin_data                   = $_SESSION['admin_data'];        $this->data['admin_data']     = $admin_data;        $this->data['section']        = 'access';        $this->data['modul_id']       = 5;        $rsListGroup                  = $this->Model_module_group->getListGroup(" WHERE module_group_active_status = 1 AND module_group_id <> 1");        $this->data["ListGroup"]      = $rsListGroup;        $this->data["CountListGroup"] = count($rsListGroup);        $rsModule                     = $this->Model_module->getModule($id); // mengambil database dari model untuk dikirim ke view        $countModule                  = count($rsModule);        $this->data['rsModule']       = $rsModule;        $this->data['countModule']    = $countModule;        $modulegroupid                = $_POST['module_group_id'];        $modulename                   = $this->security->xss_clean(secure_input($_POST['modulename']));        $modulenameOld                = $this->security->xss_clean(secure_input($_POST['modulenameOld']));        $modulepath                   = $this->security->xss_clean(secure_input($_POST['modulepath']));        $moduletype                   = $this->security->xss_clean(secure_input($_POST['moduletype']));        $pesan                        = array();        // Validasi data        if ($modulegroupid == "0") {            $pesan[] = 'Group Name has not been choose';        } else if ($modulename == "") {            $pesan[] = 'Module Name is empty';        } else if ($modulepath == "") {            $pesan[] = 'Module Controller is empty';        }        if (!count($pesan) == 0) {            foreach ($pesan as $indeks => $pesan_tampil) {                $this->data['error']         = $pesan_tampil;                $this->data['modulegroupid'] = $modulegroupid;                $this->data['modulename']    = $modulename;                $this->data['modulepath']    = $modulepath;                $this->load->view('backend/header', $this->data);                $this->load->view('backend/module/edit', $this->data);            }        } else {            $cekModule   = $this->Model_module->checkModule($modulename, $modulegroupid);            $countModule = count($cekModule);            if ($modulename == $modulenameOld) {                $countModule = 0;            }            if ($countModule > 0) {                $this->data['error']         = 'Module Name ' . $modulename . ' already exist';                $this->data['modulegroupid'] = $modulegroupid;                $this->data['modulename']    = $modulename;                $this->data['modulepath']    = $modulepath;                $this->load->view('backend/header', $this->data);                $this->load->view('backend/module/edit', $this->data);            } else {                $insert = $this->Model_module->updateModule($id, $modulename, $modulepath, $modulegroupid, $moduletype);                redirect(BASE_URL_BACKEND . "/module/");            }        }    }    public function listmoduleprivilege($id)    {        if (empty($id)) {            redirect(BASE_URL_BACKEND . "/module");            exit();        }        $admin_data                         = $_SESSION['admin_data'];        $this->data['admin_data']           = $admin_data;        $this->data['section']              = 'access';        $this->data['modul_id']             = 5;        $rsModule                           = $this->Model_module->getModule($id);        $this->data['id']                   = $id;        $this->data['modulename']           = $rsModule[0]['module_name'];        $rsListModulePrivilege              = $this->Model_module->getListModulePrivilege(" WHERE a.module_id = " . $id);        $this->data['ListModulePrivilege']  = $rsListModulePrivilege;        $this->data['countModulePrivilege'] = count($rsListModulePrivilege);        $this->load->view('backend/header', $this->data);        $this->load->view('backend/module/listprivilege', $this->data);    }    public function addmoduleprivilege($id)    {        if (empty($id)) {            redirect(BASE_URL_BACKEND . "/module");            exit();        }        $admin_data                       = $_SESSION['admin_data'];        $this->data['admin_data']         = $admin_data;        $this->data['section']            = 'access';        $this->data['modul_id']           = 5;        $this->data['id']                 = $id;        $rsModule                         = $this->Model_module->getModule($id);        $this->data['id']                 = $id;        $this->data['modulename']         = $rsModule[0]['module_name'];        $rsListPrivilege                  = $this->Model_module->getPrivilege();        $this->data['ListPrivilege']      = $rsListPrivilege;        $this->data['countListPrivilege'] = count($rsListPrivilege);        $this->load->view('backend/header', $this->data);        $this->load->view('backend/module/addprivilege', $this->data);    }    public function doAddmoduleprivilege()    {        $admin_data                       = $_SESSION['admin_data'];        $this->data['admin_data']         = $admin_data;        $this->data['section']            = 'access';        $this->data['modul_id']           = 5;        $privilegeid                      = @$_POST['privilegeid'];        $id                               = $_POST['moduleid'];        $rsModule                         = $this->Model_module->getModule($id);        $this->data['id']                 = $id;        $this->data['modulename']         = $rsModule[0]['module_name'];        $rsListPrivilege                  = $this->Model_module->getPrivilege();        $this->data['ListPrivilege']      = $rsListPrivilege;        $this->data['countListPrivilege'] = count($rsListPrivilege);        $pesan                            = array();        // Validasi data        if ($privilegeid == "") {            $pesan[] = 'Privilege Name has not been choose';        }        if (!count($pesan) == 0) {            foreach ($pesan as $indeks => $pesan_tampil) {                $this->data['error']       = $pesan_tampil;                $this->data['privilegeid'] = $privilegeid;                $this->load->view('backend/header', $this->data);                $this->load->view('backend/module/addprivilege', $this->data);            }        } else {            $rsDeleteModulePrivilege = $this->Model_module->deleteModulePrivilege($id);            foreach ($privilegeid as $p_id) {                $moduleprivilegeid = $this->Model_module->insertModulePrivilege($id, $p_id);            }            redirect(BASE_URL_BACKEND . "/module/listmoduleprivilege/" . $id);        }    }    public function deletemoduleprivilege($id, $moduleid)    {        $delete = $this->Model_module->deleteModulePrivilegeOne($id);        redirect(BASE_URL_BACKEND . "/module/listmoduleprivilege/" . $moduleid);    }    public function doOrder()    {        $order = $this->security->xss_clean($_POST['order']);        if ($order == "") {            redirect(BASE_URL_BACKEND . "/module/");            exit();        }        foreach ($order as $id => $ordervalue) {            $this->Model_module->updateOrderModule($id, $ordervalue);        }        redirect(BASE_URL_BACKEND . "/module/");    }    function listLabel($module_id)    {           $this->data['type_id']       = '';        $this->data['label_view']    = '';        $rsListType                  = $this->Model_label->getType();        $this->data["ListType"]      = $rsListType;        $this->data["CountListType"] = count($rsListType);        $rsModule                  = $this->Model_module->getModule($module_id);        $this->data['module_name'] = $rsModule[0]['module_name'];        $_SESSION['module_id']     = $module_id;        $admin_data                = $_SESSION['admin_data'];        $this->data['admin_data']  = $admin_data;        $this->data['section']     = 'access';        $this->data['modul_id']    = 5;        $this->data['module_id']   = $_SESSION['module_id'];        $orderBy                   = " ORDER BY label_order ASC";        $cond                      = $orderBy;        $this->data["ListLabel"]   = $this->Model_label->getListLabel($module_id, 0, $cond);              $this->load->view('backend/header', $this->data);        $this->load->view('backend/module/listlabel', $this->data);    }    public function addLabel($module_id)    {        $admin_data                  = $_SESSION['admin_data'];        $this->data['admin_data']    = $admin_data;        $this->data['section']       = '';        $this->data['modul_id']      = 5;        $this->data['type_id']       = '';        $this->data['label_view']    = '';        $this->data['label_parent']    = 0;        $rsListType                  = $this->Model_label->getType();        $this->data["ListType"]      = $rsListType;        $this->data["CountListType"] = count($rsListType);        $this->load->view('backend/header', $this->data);        $this->load->view('backend/module/addlabel', $this->data);    }    function doAddLabel()    {        $session_module_id = $_SESSION['module_id'];        $tb                = $_POST['tbSave'];        if (!$tb) {            redirect(BASE_URL_BACKEND . "/listlabel/" . $session_module_id);            exit();        }        $this->data['section']       = '';        $this->data['label_view']    = '';        $rsListType                  = $this->Model_label->getType();        $this->data["ListType"]      = $rsListType;        $admin_data                   = $_SESSION['admin_data'];        $this->data['admin_data']     = $admin_data;        $module_id                    = $session_module_id;        $label_parent                  = $this->security->xss_clean(secure_input($_POST['label_parent']));        $label_title                  = $this->security->xss_clean(secure_input($_POST['label_title']));        $label_name                  =  $this->security->xss_clean(secure_input($_POST['label_name']));        $type_id                      = $this->security->xss_clean(secure_input($_POST['type_id']));        $label_view                   = $this->security->xss_clean(secure_input($_POST['label_view']));        $label_page = isset($_POST['label_page']) ? 1 : 0;        $label_notif                   = $this->security->xss_clean(secure_input($_POST['label_notif']));        $pesan                        = array();        // Validasi data        if ($label_title == "") {            $pesan[] = 'Module Name is empty';        }         else if ($label_name == "") {            $pesan[] = 'Label name is empty';        }        else if ($type_id == "0") {            $pesan[] = 'Type has not been choose';        }        if (!count($pesan) == 0) {            foreach ($pesan as $indeks => $pesan_tampil) {                $this->data['error']       = $pesan_tampil;                $this->data['label_parent']     = $label_parent;                $this->data['type_id']     = $type_id;                $this->data['label_title'] = $label_title;                $this->data['label_name'] = $label_name;                $this->data['label_view']  = $label_view;                $this->data['label_page']  = $label_page;                $this->data['label_notif']  = $label_notif;                $this->load->view('backend/header', $this->data);                $this->load->view('backend/module/addlabel', $this->data);            }        } else {            $cekLabel   = $this->Model_label->checkLabel($label_title,$module_id);            $countLabel = count($cekLabel);            if ($countLabel > 0) {                $this->data['error']       = 'Label  Name ' . $label_title . ' already exist';                $this->data['type_id']     = $type_id;                $this->data['label_parent']     = $label_parent;                $this->data['label_title'] = $label_title;                $this->data['label_name'] = $label_name;                $this->data['label_view']  = $label_view;                $this->load->view('backend/header', $this->data);                $this->load->view('backend/module/addlabel', $this->data);            } else {                $label_name= generateNameLabel($label_name);                $insert = $this->Model_label->insertLabel($label_parent,$module_id, $label_title,$label_name, $type_id, $label_view,$label_page,$label_notif);                redirect(BASE_URL_BACKEND . "/module/listLabel/" . $session_module_id);            }        }    }    public function editLabel($id)    {        $session_module_id = $_SESSION['module_id'];        if (empty($id)) {           redirect(BASE_URL_BACKEND . "/listlabel/" . $session_module_id);            exit();        }        $rsListType                  = $this->Model_label->getType();        $this->data["ListType"]      = $rsListType;        $admin_data                   = $_SESSION['admin_data'];        $this->data['admin_data']     = $admin_data;        $this->data['modul_id']       = 5;         $this->data['section']       = '';        $rsLabel                     = $this->Model_label->getlabel($id); // mengambil database dari model untuk dikirim ke view        $countLabel                  = count($rsLabel);        $this->data['rsLabel']       = $rsLabel;        $this->data['countLabel']    = $countLabel;        if ($countLabel == 0) {            redirect(BASE_URL_BACKEND . "/listlabel/" . $session_module_id);            exit();        }        $this->load->view('backend/header', $this->data);        $this->load->view('backend/module/editlabel', $this->data);    }    public function doEditLabel($id)    {        $session_module_id = $_SESSION['module_id'];        $tb                = $_POST['tbEdit'];        if (!$tb OR $id == '') {            redirect(BASE_URL_BACKEND . "/module");            exit();        }        $admin_data                   = $_SESSION['admin_data'];        $this->data['admin_data']     = $admin_data;        $this->data['section']        = 'access';        $this->data['modul_id']       = 5;        $rsLabel                     = $this->Model_label->getLabel($id); // mengambil database dari model untuk dikirim ke view        $countLabel                  = count($rsLabel);        $this->data['rsLabel']       = $rsLabel;        $this->data['countLabel']    = $countLabel;        $module_id                    = $session_module_id;        $label_parent                 = $this->security->xss_clean(secure_input($_POST['label_parent']));        $label_title                  = $this->security->xss_clean(secure_input($_POST['label_title']));        $label_name                   = $this->security->xss_clean(secure_input($_POST['label_name']));        $type_id                      = $this->security->xss_clean(secure_input($_POST['type_id']));        $label_view                   = $this->security->xss_clean(secure_input($_POST['label_view']));        $label_order                   = $this->security->xss_clean(secure_input($_POST['label_order']));        $label_page = isset($_POST['label_page']) ? 1 : 0;        $label_notif                   = $this->security->xss_clean(secure_input($_POST['label_notif']));        $pesan                        = array();        // Validasi data        if ($type_id == "0") {            $pesan[] = 'Type';        } else if ($label_title == "") {            $pesan[] = 'Label title is empty';        } else if ($label_name == "") {            $pesan[] = 'Label name is empty';        }        if (!count($pesan) == 0) {            foreach ($pesan as $indeks => $pesan_tampil) {                $this->data['type_id']     = $type_id;                $this->data['label_title'] = $label_title;                $this->data['label_name'] = $label_name;                $this->data['label_view']  = $label_view;                $this->data['label_page']  = $label_page;                $this->data['label_notif']  = $label_notif;                $rsListType                  = $this->Model_label->getType();                $this->data["ListType"]      = $rsListType;                $this->load->view('backend/header', $this->data);                $this->load->view('backend/module/editlabel', $this->data);            }        } else {            $label_name= generateNameLabel($label_name);                $insert = $this->Model_label->updateLabel($id,$label_parent, $module_id, $label_title,$label_name, $type_id, $label_view,$label_page,$label_order,$label_notif);                redirect(BASE_URL_BACKEND . "/module/listLabel/" . $session_module_id);        }            }    function activeLabel($id)    {        $session_module_id = $_SESSION['module_id'];        $id = $this->security->xss_clean(secure_input($id));        if ($id == '') {            redirect(BASE_URL_BACKEND . "/module/listLabel/" . $session_module_id);            exit();        }        $rsLabel      = $this->Model_label->getLabel($id);        $label_title   = $rsLabel[0]['label_title'];        $active_status = abs($rsLabel[0]['label_active_status'] - 1);        $active        = $this->Model_label->activeLabel($id);        if ($active_status == 1) {            $log_module = "Active " . $id;        } else {            $log_module = "Inactive " . $id;        }        $log_value = $id . " | " . $label_title . " | " . $active_status;        $insertlog = $this->Model_logcms->insertLogCMS($log_module, $log_value);        redirect(BASE_URL_BACKEND . "/module/listLabel/" . $session_module_id);    }    function deleteLabel($id = '')    {        $session_module_id = $_SESSION['module_id'];        $id = $this->security->xss_clean(secure_input($id));        if (empty($id)) {            redirect(BASE_URL_BACKEND . "/module/listLabel/" . $session_module_id);            exit();        }        $rsLabel    = $this->Model_label->getLabel($id);        $label_title   = $rsLabel[0]['label_title'];        $delete      = $this->Model_label->deleteLabel($id);        $delete2      = $this->Model_label->deleteChild($id);        $delete3      = $this->Model_label->deleteContent($id);        $log_module  = "Delete " . $this->module;        $log_value   = $id . " | " . $label_title;        $insertlog   = $this->Model_logcms->insertLogCMS($log_module, $log_value);        redirect(BASE_URL_BACKEND . "/module/listLabel/" . $session_module_id);    }    function doOrderLabel()    {    $session_module_id = $_SESSION['module_id'];        $order = $this->security->xss_clean($_POST['order']);        if ($order == "") {            redirect(BASE_URL_BACKEND . "/module/listLabel/" . $session_module_id);            exit();        }        foreach ($order as $id => $ordervalue) {            $this->Model_label->updateOrderLabel($id, $ordervalue);        }        redirect(BASE_URL_BACKEND . "/module/listLabel/" . $session_module_id);    }        function insertOptions(){        $session_module_id = $_SESSION['module_id'];        $today= date("Y-m-d H:i:s");            $data = array();              for ($i = 0; $i < count($this->input->post('options_title')); $i++) {                 $data[] = array(                      'label_id'=>$this->security->xss_clean(secure_input($_POST['label_id'])),                      'type_id'=>$this->security->xss_clean(secure_input($_POST['type_id'])),                      'options_title' => $this->security->xss_clean(secure_input($_POST['options_title'][$i]))                  );              }        $this->Model_label->insertOptions($data);        $this->data['errors'] = $this->error;        $this->data['success'] = $this->success;        redirect(BASE_URL_BACKEND . "/module/listLabel/" . $session_module_id);    }    function editOptions(){        $options_id = $this->input->post('primary_key');        $options_title = $this->input->post('title');          $this->Model_label->updateOptions($options_id,$options_title);    }        function deleteOptions($id){         $session_module_id = $_SESSION['module_id'];        if (empty($id)) {            redirect(BASE_URL_BACKEND . "/module/listLabel/" . $session_module_id);               exit();	}			$delete = $this->Model_label->deleteOptions($id);		$log_module = "Delete ".$this->module;		$log_value = $id." | options deteted";		$insertlog = $this->Model_logcms->insertLogCMS($log_module,$log_value);                redirect(BASE_URL_BACKEND . "/module/listLabel/" . $session_module_id);    }    }