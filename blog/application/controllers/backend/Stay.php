<?php if ( ! defined('BASEPATH')) exit('No direct script access allowed');class Stay extends CI_Controller {	public $arrMenu = array();	public $data;	public $privilege = array();	public function __construct()	{		parent::__construct();                if( ! $_SESSION)                {                    session_start();                }		if(empty($_SESSION['admin_data'])){			session_destroy();			redirect(BASE_URL_BACKEND."/signin");			exit();		}		$this->load->model(array('backend/Model_menu_frontend','backend/Model_stay','backend/Model_alias', 'backend/Model_language','backend/Model_logcms'));		$this->load->helper(array('funcglobal','menu','accessprivilege','alias'));		                $module_name=  $this->uri->segment(2);                $getmodule = $this->Model_stay->getModule($module_name);                foreach ($getmodule as $gm) {                 $this->module_id = $gm->module_id;                 $this->section = $gm->module_group_id;                 $_SESSION['module_id']=$this->module_id;                }		//get menu from helper menu		//get menu from helper menu		$this->arrMenu = menu();		$this->data = array();                $this->data['ListMenu'] = $this->arrMenu;                $this->data['CountMenu'] = count($this->arrMenu);		$this->data['controller'] = $module_name;               		//check privilege module		$this->privilege = accessprivilegeuserlevel($_SESSION['admin_data']['user_level_id'], $_SESSION['module_id']);		$this->breadcrump = breadCrump($_SESSION['module_id']);	}	public function index()	{		$this->view();	}		function view(){		$admin_data = $_SESSION['admin_data'];		$this->data['admin_data'] = $admin_data;		$this->data['section'] = $this->section; 		$this->data['modul_id'] = $_SESSION['module_id'];		$this->data['breadcrump'] = $this->breadcrump;		$searchkey = "";		$searchby = "";                             $condp = "order BY a.stay_id";                $ListStay = $this->Model_stay->getListStay($condp);			$this->data["ListStay"] = $ListStay;		//extract privilege		$this->data["list"] = $this->privilege[0];		$this->data["view"] = $this->privilege[1];		$this->data["add"] = $this->privilege[2];		$this->data["edit"] = $this->privilege[3];		$this->data["publish"] = $this->privilege[4];		$this->data["approve"] = $this->privilege[5];		$this->data["delete"] = $this->privilege[6];		$this->data["order"] = $this->privilege[7];		if($this->data["list"] == 0){			echo "<script>alert('Can\'t Access Module');window.location.href='".BASE_URL_BACKEND."/home';</script>";			die;		}				$this->data['searchkey'] = $searchkey;		$this->data['searchby'] = $searchby;				$this->load->view('backend/header',$this->data);		$this->load->view('backend/stay/list');	}         function add(){		//extract privilege		$this->data["add"] = $this->privilege[2];		if($this->data["add"] == 0){			echo "<script>alert('Can\'t Access Module');window.location.href='".BASE_URL_BACKEND."/home';</script>";			die;		}		                              		$admin_data = $_SESSION['admin_data'];		$this->data['admin_data'] = $admin_data;		$this->data['section'] = $this->section; 		$this->data['modul_id'] = $this->module_id;		$this->data['breadcrump'] = $this->breadcrump;               		$this->load->view('backend/header',$this->data);		$this->load->view('backend/stay/add',$this->data);	}      	public function doAdd(){		//extract privilege		$this->data["add"] = $this->privilege[2];		if($this->data["add"] == 0){			echo "<script>alert('Can\'t Access Module');window.location.href='".BASE_URL_BACKEND."/home';</script>";			die;		}		$tb = $_POST['tbSave'];		if (!$tb) {			redirect(BASE_URL_BACKEND.'/'.$this->data['controller']);			exit();		}		$admin_data = $_SESSION['admin_data'];		$this->data['admin_data'] = $admin_data;		$this->data['section'] = $this->section; 		$this->data['modul_id'] = $this->module_id;		$this->data['breadcrump'] = $this->breadcrump;		$stay_title = $this->security->xss_clean(secure_input($_POST['staytitle']));                 $stay_imageurl = $this->security->xss_clean(secure_input($_POST['stayimageurl']));		$stay_desc = $this->security->xss_clean(secure_input($_POST['staydesc']));                $stay_desc2 = $this->security->xss_clean(secure_input($_POST['staydesc2']));                $stay_urla = $this->security->xss_clean(secure_input($_POST['stayurla']));                 $stay_urlb = $this->security->xss_clean(secure_input($_POST['stayurlb']));                 $stay_urlc = $this->security->xss_clean(secure_input($_POST['stayurlc']));                 $stay_urld = $this->security->xss_clean(secure_input($_POST['stayurld'])); 		$pesan = array();		// Validasi data		if ($stay_title=="") {			$pesan[] = 'Stay Page Title is empty';		} 			if (! count($pesan)==0 ) {			foreach ($pesan as $indeks=>$pesan_tampil) {				$this->data['error'] = $pesan_tampil;								$this->data['staytitle']=$stay_title;                                $this->data['staydesc']=$stay_desc;                                $this->data['stayimageurl']=$stay_imageurl;                                $this->data['stayurla']=$stay_urla;                                $this->data['stayurla']=$stay_urlb;                                $this->data['stayurla']=$stay_urlc;													$this->load->view('backend/header',$this->data);				$this->load->view('backend/stay/add',$this->data);			}		} else {			$cekStay = $this->Model_stay->checkStay($stay_title);			$countStay = count($cekStay);						if ($countStay > 0 ) {				$this->data['error']='Stay Title '.$stay_title.' already exist';				$this->data['stay_title']=$stay_title;							$this->load->view('backend/header',$this->data);				$this->load->view('backend/stay/add',$this->data);			} else {				$stay_imageurl = str_replace(BASE_URL,"",$stay_imageurl);				$stay_id = $this->Model_stay->insertStay($stay_title,$stay_imageurl,$stay_desc,$stay_desc2,$stay_urla,$stay_urlb,$stay_urlc,$stay_urld);                                $log_module = "Add ".$this->module;                                $log_value = $stay_id." | ".$stay_title;                                $insertlog = $this->Model_logcms->insertLogCMS($log_module,$log_value);				                                redirect(BASE_URL_BACKEND.'/'.$this->data['controller']);				}			}		}   	function active($id){		if (empty($id)) {			redirect(BASE_URL_BACKEND.'/'.$this->data['controller']);			exit();		}		//extract privilege		$this->data["approve"] = $this->privilege[5];		if($this->data["approve"] == 0){			echo "<script>alert('Can\'t Access Module');window.location.href='".BASE_URL_BACKEND."/home';</script>";			die;		}		$rsStay = $this->Model_stay->getStay($id); 		$title = $rsStay[0]['stay_title'];		$active_status = abs($rsStay[0]['stay_active_status']-1);		$active = $this->Model_stay->activeStay($id);		createRouteAlias(); //create route alias		if($active_status == 1){			$log_module = "Active ".$this->data['controller'];		} else {			$log_module = "Inactive ".$this->data['controller'];		}		$log_value = $id." | ".$title." | ".$active_status;		$insertlog = $this->Model_logcms->insertLogCMS($log_module,$log_value);                                $this->generateStay();		redirect(BASE_URL_BACKEND.'/'.$this->data['controller']);	}         function delete($id){		if (empty($id)) {			redirect(BASE_URL_BACKEND.'/'.$this->data['controller']);			exit();		}		//extract privilege		$this->data["delete"] = $this->privilege[6];				if($this->data["delete"] == 0){			echo "<script>alert('Can\'t Access Module');window.location.href='".BASE_URL_BACKEND."/home';</script>";			die;		}		$rsStay = $this->Model_stay->getStay($id); 		$title = $rsStay[0]['stay_title'];                                      if($page_type == 2){                $this->deleteStay($id);                }                $delete = $this->Model_stay->deleteStay($id);		$log_module = "Delete ".$this->module;		$log_value = $id." | ".$title;		$insertlog = $this->Model_logcms->insertLogCMS($log_module,$log_value);                                $this->generateStay();		redirect(BASE_URL_BACKEND.'/'.$this->data['controller']);	}              public function deleteStay($id){            if (empty($id)) {			redirect(BASE_URL_BACKEND.'/'.$this->data['controller']);			exit();		}		//extract privilege		$this->data["delete"] = $this->privilege[6];		if($this->data["delete"] == 0){			echo "<script>alert('Can\'t Access Module');window.location.href='".BASE_URL_BACKEND."/home';</script>";			die;		}                $where = "";                $orderBy = "ORDER BY a.stay_id DESC";				$cond 			= $where." ".$orderBy;                $ListStay = $this->Model_stay->getListStay($id, $cond);                foreach($ListStay as $stay){                          $image_path = './assets/images/'.$stay['stay_image'];                         $image_resize = './assets/images/resized/'.$stay['stay_image'];                                 $image_thumb = './assets/images/thumb/'.$stay['stay_image'];                         if($stay['stay_image'] != 'default_icon.png'){                        unlink($image_path);                        unlink($image_resize);                        unlink($image_thumb);                           }                             $this->Model_stay->deleteStay($stay['stay_id']);                }                           }      public function edit($id){		if (empty($id)) {			redirect(BASE_URL_BACKEND.'/'.$this->data['controller']);			exit();		}		//extract privilege		$this->data["edit"] = $this->privilege[3];		if($this->data["edit"] == 0){			echo "<script>alert('Can\'t Access Module');window.location.href='".BASE_URL_BACKEND."/home';</script>";			die;		}		$admin_data = $_SESSION['admin_data'];		$this->data['admin_data'] = $admin_data;		$this->data['section'] = $this->section; 		$this->data['modul_id'] = $this->module_id;		$this->data['breadcrump'] = $this->breadcrump;			$rsStay = $this->Model_stay->getStay($id);                 // mengambil database dari model untuk dikirim ke view		                $countStay = count($rsStay);		$this->data['rsStay'] = $rsStay;		$this->data['countStay'] = $countStay;		$this->load->view('backend/header',$this->data);		$this->load->view('backend/stay/edit',$this->data);	}		public function doEdit($id){		$tb = $_POST['tbEdit'];		if (!$tb OR $id == '') {			redirect(BASE_URL_BACKEND.'/'.$this->data['controller']);			exit();		}		//extract privilege		$this->data["edit"] = $this->privilege[3];		if($this->data["edit"] == 0){			echo "<script>alert('Can\'t Access Module');window.location.href='".BASE_URL_BACKEND."/home';</script>";			die;		}		$admin_data = $_SESSION['admin_data'];		$this->data['admin_data'] = $admin_data;		$this->data['section'] = $this->section; 		$this->data['modul_id'] = $this->module_id;		$this->data['breadcrump'] = $this->breadcrump;		$rsStay = $this->Model_stay->getStay($id);  // mengambil database dari model untuk dikirim ke view		$countStay = count($rsStay);		$this->data['rsStay'] = $rsStay;		$this->data['countStay'] = $countStay;		$stay_title = $this->security->xss_clean(secure_input($_POST['staytitle']));                $stay_titleOld = $this->security->xss_clean(secure_input($_POST['stay_titleOld']));                $stay_imageurl = $this->security->xss_clean(secure_input($_POST['stayimageurl']));                $stay_desc = $this->security->xss_clean(secure_input($_POST['staydesc']));                $stay_desc2 = $this->security->xss_clean(secure_input($_POST['staydesc2']));                $stay_urla = $this->security->xss_clean(secure_input($_POST['stayurla']));                 $stay_urlb = $this->security->xss_clean(secure_input($_POST['stayurlb']));                 $stay_urlc = $this->security->xss_clean(secure_input($_POST['stayurlc']));                $stay_urld = $this->security->xss_clean(secure_input($_POST['stayurld']));				$pesan = array();		// Validasi data		if ($stay_title=="") {			$pesan[] = 'Stay Title is empty';		} 		if (! count($pesan)==0 ) {			foreach ($pesan as $indeks=>$pesan_tampil) {				$this->data['error'] = $pesan_tampil;				$this->load->view('backend/header',$this->data);				$this->load->view('backend/stay/edit',$this->data);			}		} else {                        $stay_imageurl = str_replace(BASE_URL,"",$stay_imageurl);				$update = $this->Model_stay->updateStay($id,$stay_title,$stay_imageurl,$stay_desc,$stay_desc2,$stay_urla,$stay_urlb,$stay_urlc,$stay_urld);				                                $log_module = "Edit ".$this->module;                                $log_value = $id." | ".$stay_title;                                $insertlog = $this->Model_logcms->insertLogCMS($log_module,$log_value);                                                                $this->generateStay();                        redirect(BASE_URL_BACKEND.'/'.$this->data['controller']);			}			}                 function doOrder(){		$order = $this->security->xss_clean($_POST['order']);		if($order == ""){			redirect(BASE_URL_BACKEND.'/'.$this->data['controller']);			exit();		}         foreach($order as $id => $ordervalue){			$this->Model_stay->updateOrderStay($id,$ordervalue);                        echo $ordervalue;		}                $this->generateStay();		redirect(BASE_URL_BACKEND.'/'.$this->data['controller']);	}       function generateStay(){                $ListStay		= $this->Model_stay->generateStay(" where a.stay_active_status=1 order by a.stay_order ASC");		$countStay		= count($ListStay);		//createCacheBanner($rsBanner,"bannerhome");               createCache($ListStay,"stay");        }       public function resizing($resize) {        $imageurl = str_replace(BASE_URL,PATH_PROJECT,$resize);        $image_name = end((explode('/', $resize)));       // echo PATH_PROJECT.$image_name;                $config['image_library'] = 'gd2';        $config['source_image'] = $imageurl;        $config['new_image'] = PATH_ASSETS.'/file_upload/thumbs/'.$image_name;                $config['create_thumb'] = FALSE;        $config['maintain_ratio'] = FALSE;        $config['width']         = 350;        $config['height']       = 300;        $config['x_axis']         = 150;        $config['y_axis']       = 150;        $this->load->library('image_lib', $config);        $this->image_lib->resize();        //$this->image_lib->crop();           }    }